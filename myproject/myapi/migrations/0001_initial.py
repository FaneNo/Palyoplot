# Generated by Django 5.1.2 on 2024-11-12 02:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CSVColumn',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('column_name', models.CharField(max_length=255)),
                ('column_order', models.IntegerField(default=0)),
                ('data_type', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'csv_columns',
            },
        ),
        migrations.CreateModel(
            name='CSVFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('display_id', models.IntegerField(null=True)),
                ('file_name', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('row_count', models.IntegerField(null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='csv_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'csv_files',
            },
        ),
        migrations.CreateModel(
            name='CSVData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('row_number', models.IntegerField()),
                ('value', models.TextField(null=True)),
                ('column_id', models.ForeignKey(db_column='column_id', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='data', to='myapi.csvcolumn')),
                ('file_id', models.ForeignKey(db_column='file_id', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='data', to='myapi.csvfile')),
            ],
            options={
                'db_table': 'csv_data',
            },
        ),
        migrations.AddField(
            model_name='csvcolumn',
            name='file_id',
            field=models.ForeignKey(db_column='file_id', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='myapi.csvfile'),
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.TextField()),
                ('dataset_type', models.CharField(max_length=50)),
                ('csv_data', models.JSONField(blank=True, null=True)),
                ('visualization_pref', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_data', models.ImageField(upload_to='images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GraphImage',
            fields=[
                ('image_id', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('image_data', models.BinaryField(default=b'')),
                ('metadata', models.TextField(null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='graph_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'graph_images',
            },
        ),
        migrations.CreateModel(
            name='VisualizationPreference',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('graph_type', models.CharField(default='bar', max_length=50)),
                ('color', models.CharField(max_length=50, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('additional_options', models.JSONField(null=True)),
                ('file_id', models.ForeignKey(db_column='file_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visualization_preferences', to='myapi.csvfile')),
                ('x_axis_column_id', models.ForeignKey(db_column='x_axis_column_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='x_axis_visualizations', to='myapi.csvcolumn')),
                ('y_axis_column_id', models.ForeignKey(db_column='y_axis_column_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='y_axis_visualizations', to='myapi.csvcolumn')),
            ],
            options={
                'db_table': 'visualization_preferences',
            },
        ),
        migrations.AddIndex(
            model_name='csvfile',
            index=models.Index(fields=['user_id'], name='user_id_idx'),
        ),
        migrations.AddIndex(
            model_name='csvdata',
            index=models.Index(fields=['file_id'], name='file_id_idx_csvdata'),
        ),
        migrations.AddIndex(
            model_name='csvdata',
            index=models.Index(fields=['column_id'], name='column_id_idx_csvdata'),
        ),
        migrations.AddIndex(
            model_name='csvcolumn',
            index=models.Index(fields=['file_id'], name='file_id_idx_csvcolumn'),
        ),
        migrations.AddIndex(
            model_name='visualizationpreference',
            index=models.Index(fields=['file_id'], name='file_id_idx'),
        ),
        migrations.AddIndex(
            model_name='visualizationpreference',
            index=models.Index(fields=['x_axis_column_id'], name='x_axis_col_idx'),
        ),
        migrations.AddIndex(
            model_name='visualizationpreference',
            index=models.Index(fields=['y_axis_column_id'], name='y_axis_col_idx'),
        ),
    ]
